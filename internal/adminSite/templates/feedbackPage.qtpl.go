// Code generated by qtc from "feedbackPage.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

package templates

import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

type FeedbackPage struct {
	BasePage

	WasSuccess bool
	Message    string

	NextURL           string
	RedirectTimeoutMs int
}

func (p *FeedbackPage) alertType() string {
	if p.WasSuccess {
		return "alert-success"
	} else {
		return "alert-danger"
	}
}

func (p *FeedbackPage) StreamBody(qw422016 *qt422016.Writer) {
	qw422016.N().S(`
<div>

    <div class="alert `)
	qw422016.N().S(p.alertType())
	qw422016.N().S(`" role="alert">
        `)
	qw422016.E().S(p.Message)
	qw422016.N().S(`
    </div>

    <p>If you're not redirected automatically in the next few seconds, <a href="`)
	qw422016.E().S(p.NextURL)
	qw422016.N().S(`">click here</a>.</p>

    <script>
        setTimeout(function(){window.location.replace("`)
	qw422016.N().J(p.NextURL)
	qw422016.N().S(`");}, `)
	qw422016.N().D(p.RedirectTimeoutMs)
	qw422016.N().S(`);
    </script>

</div>
`)
}

func (p *FeedbackPage) WriteBody(qq422016 qtio422016.Writer) {
	qw422016 := qt422016.AcquireWriter(qq422016)
	p.StreamBody(qw422016)
	qt422016.ReleaseWriter(qw422016)
}

func (p *FeedbackPage) Body() string {
	qb422016 := qt422016.AcquireByteBuffer()
	p.WriteBody(qb422016)
	qs422016 := string(qb422016.B)
	qt422016.ReleaseByteBuffer(qb422016)
	return qs422016
}
