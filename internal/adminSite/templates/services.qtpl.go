// Code generated by qtc from "services.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

package templates

import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

type ActionButton struct {
	Title    string
	Location string
	Type     string
}

func (a ActionButton) ButtonType() string {
	if a.Type == "" {
		return "btn-primary"
	}
	return "btn-" + a.Type
}

type ServicesPage struct {
	BasePage
	Name    string
	Actions []ActionButton
}

func (p *ServicesPage) StreamBody(qw422016 *qt422016.Writer) {
	qw422016.N().S(`
<h2>Hello `)
	qw422016.E().S(p.Name)
	qw422016.N().S(`!</h2>
<div>
    <p class="text-secondary"><i>Click a button!</i></p>

    `)
	for _, action := range p.Actions {
		qw422016.N().S(`
        <a href="`)
		qw422016.N().S(action.Location)
		qw422016.N().S(`" class="btn `)
		qw422016.E().S(action.ButtonType())
		qw422016.N().S(`">`)
		qw422016.N().S(action.Title)
		qw422016.N().S(`</a>
    `)
	}
	qw422016.N().S(`
</div>
`)
}

func (p *ServicesPage) WriteBody(qq422016 qtio422016.Writer) {
	qw422016 := qt422016.AcquireWriter(qq422016)
	p.StreamBody(qw422016)
	qt422016.ReleaseWriter(qw422016)
}

func (p *ServicesPage) Body() string {
	qb422016 := qt422016.AcquireByteBuffer()
	p.WriteBody(qb422016)
	qs422016 := string(qb422016.B)
	qt422016.ReleaseByteBuffer(qb422016)
	return qs422016
}
